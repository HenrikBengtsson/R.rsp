<%------------------------------------------------------------------------
 Usage:
 md <- R.rsp::rfile("README.md.rsp", postprocess=FALSE)
 ------------------------------------------------------------------------%>
<%
pkg <- local({
  name <- NULL
  function() {
    if (is.null(name)) {
      pd <- as.list(as.data.frame(read.dcf("DESCRIPTION"), stringsAsFactors=FALSE))
      name <<- pd$Package
    }
	name
  }
})

pkg_title <- local({
  title <- NULL
  function() {
    if (is.null(title)) {
      pd <- as.list(as.data.frame(read.dcf("DESCRIPTION"), stringsAsFactors=FALSE))
      title <<- pd$Title
    }
	title
  }
})

cran <- local({
  available <- NULL
  function() {
    if (is.null(available)) {
	  repos <- "http://cran.r-project.org"
	  data <- available.packages(contriburl=contrib.url(repos, "source"))
	  available <<- pkg() %in% rownames(data)
	}
	available
  }
})

bioc <- local({
  available <- NULL
  function() {
    if (is.null(available)) {
	  repos <- "http://www.bioconductor.org/packages/devel/bioc/"
	  data <- available.packages(contriburl=contrib.url(repos, "source"))
	  available <<- pkg() %in% rownames(data)
	}
	available
  }
})

github_repos = local({
  repos <- NULL;
  function() {
    if (is.null(repos)) repos <<- gsub(".*:", "", gsub("[.]git", "", system2("git", args=c("config", "--get remote.origin.url"), stdout=TRUE)))
	repos
  }
})

repos <- function() {
  if (cran()) "CRAN" else if (bioc()) "Bioonductor" else "GitHub"
}

repos_status <- function() {
  if (cran()) {
    sprintf("[status](http://cran.r-project.org/web/checks/check_results_%s.html)", pkg())
  } else if (bioc()) {
    biocURL <- function(type) sprintf("[%s](http://master.bioconductor.org/checkResults/%s/bioc-LATEST/%s)", type, type, pkg())
    paste("status:", paste(biocURL(c("release", "devel")), collapse=", "))
  } else {
    ""
  }
}

travis <- function() {
  if (!file.exists(".travis.yml")) return("")
  sprintf('<a href="https://travis-ci.org/%s"><img src="https://travis-ci.org/%s.svg" alt="Build status"></a>', github_repos(), github_repos())
}

appveyor <- function() {
  if (!file.exists("appveyor.yml")) return("")
  repos <- github_repos()
  repos <- strsplit(repos, split="/")[[1]]
  repos[2] <- gsub("[.]", "-", tolower(repos[2]))
  repos <- paste(repos, collapse="/")
  sprintf('<a href="https://ci.appveyor.com/project/%s"><img src="https://ci.appveyor.com/api/projects/status/github/%s" alt="Build status"></a>', repos, github_repos())
}

coveralls <- function() {
  if (!file.exists(".coveralls.R")) return("")
  sprintf('<a href="https://coveralls.io/r/%s"><img src="https://coveralls.io/repos/%s/badge.png?branch=develop" alt="Coverage Status"/></a>', github_repos(), github_repos())
}
%>
# <%=pkg()%>: <%=pkg_title()%>

<% if (file.exists("OVERVIEW.md")) { R.rsp::rcat(file="OVERVIEW.md") } %>

## Installation
<% if (cran()) { %>
R package <%=pkg()%> is available on [CRAN](http://cran.r-project.org/package=<%=pkg()%>) and can be installed in R as:
```r
install.packages('<%=pkg()%>')
```
<% } else if (bioc()) { %>
R package <%=pkg()%> is available on [Bioconductor](http://www.bioconductor.org/packages/devel/bioc/html/<%=pkg()%>.html) and can be installed in R as:

```r
source('http://bioconductor.org/biocLite.R')
biocLite('<%=pkg()%>')
```
<% } else { %>
R package <%=pkg()%> is only available via [GitHub](https://github.com/<%=github_repos()%>) and can be installed in R as:
```r
source('http://callr.org/install#<%=github_repos()%>')
```
<% } %>


## Software quality

| Resource:     | <%=repos()%>        | Travis CI        | Appveyor         |
| ------------- | ------------------- | ---------------- | ---------------- |
| _Platforms:_  | _Multiple_          | _Linux_          | _Windows_        |
| R CMD check   | <%=repos_status()%> | <%=travis()%>    | <%=appveyor() %> |
| Test coverage |                     | <%=coveralls()%> |                  |
